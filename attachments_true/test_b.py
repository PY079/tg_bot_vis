from data import t_token_tg_b, t_id_channel
from telebot import types
import telebot
import chardet

def check_encoding(text, expected_encoding):
    encoded_text = text.encode()
    detected_encoding = chardet.detect(encoded_text)['encoding']
    return detected_encoding == expected_encoding






me = '''

–î–æ–±—Ä–æ–µ –≤—Ä–µ–º—è —Å—É—Ç–æ–∫, —Ä–µ–±—è—Ç–∫–∏!)
–ú–æ–∂–Ω–æ –≤–∞—Å –ø–æ–ø—Ä–æ—Å–∏—Ç—å –æ—Ü–µ–Ω–∏—Ç—å, —á—Ç–æ-—Ç–æ –ø–æ —Ç–∏–ø—É –Ω–µ–±–æ–ª—å—à–æ–≥–æ —Å—Ç–∏—Ö–æ—Ç–≤–æ—Ä–µ–Ω–∏—è –æ—Ç –º–µ–Ω—è..? üëâüëà

  Íû´–Ω·¥Ä·¥á…Ø—å, ·¥õ—ã - ·¥Ñ·¥Ä ç·¥è·¥á ·¥ß—É—á…Ø·¥á·¥á, —á·¥õ·¥è –±—ã·¥ß·¥è ·¥Ñ·¥è  ç–Ω·¥è–π. ·¥õ—ã ·¥®·¥á·¥© ô·¥Ä—è, ·¥®·¥©·¥Ä ô–¥·¥Ä, ·¥õ—ã ·¥®·¥á·¥© ô·¥Ä—è, ·¥ã·¥è ç—É —è, ·¥è·¥õ·¥ã·¥©—ã·¥ß·¥Ñ—è …ú·¥Ä·¥ã·¥©—ã·¥õ—ã ç–∏ ·¥¶·¥ß·¥Ä…ú·¥Ä ç–∏ –∏ —á–∏·¥Ñ·¥õ·¥è–π –¥—É…Ø·¥è–π. –Ø ·¥è—á·¥á–Ω—å ·¥ß—é–±·¥ß—é ·¥õ·¥á–±—è. –î·¥Ä —è ·¥è—á·¥á–Ω—å, —è ·¥è—á·¥á–Ω—å ·¥ß—é–±·¥ß—é ·¥õ·¥á–±—è.. 
–Ø —Ö·¥è—á—É –±—ã·¥õ—å ·¥Ñ ·¥õ·¥è–±·¥è–π –¥·¥è ·¥®·¥è·¥õ·¥á·¥©–∏ ·¥®—É·¥ß—å·¥Ñ·¥Ä
–Ø —Ö·¥è—á—É –±—ã·¥õ—å ·¥Ñ ·¥õ·¥è–±·¥è–π ·¥ã·¥Ä–∂–¥—É—é ·¥Ñ·¥á·¥ã—É–Ω–¥—É,  ç–∏–Ω—É·¥õ—É, —á·¥Ä·¥Ñ, –¥·¥á–Ω—å, ·¥ã·¥Ä–∂–¥—ã·¥á ·¥Ñ—É·¥õ·¥ã–∏ –∏ –Ω·¥á ·¥è·¥õ·¥®—É·¥Ñ·¥ã·¥Ä·¥õ—å ·¥õ·¥á–±—è –Ω–∏·¥ã·¥è ç—É, —Ö·¥è—á—É –±—ã·¥õ—å ·¥õ·¥è·¥ß—å·¥ã·¥è ·¥Ñ ·¥õ·¥è–±·¥è–π. ·¥õ—ã  ç·¥è–π —á·¥á·¥ß·¥è ô·¥á·¥ã.. ·¥Ñ ·¥õ·¥è–±·¥è–π  ç–Ω·¥á ·¥è—á·¥á–Ω—å ·¥ã·¥è ç…∏·¥è·¥©·¥õ–Ω·¥è,  ç·¥è—è ·¥ß—é–±·¥è ô—å.üíìü´∂üèª

–í–æ—Ç –æ–Ω–æ.. –ë—É–¥—É —Ä–∞–¥–∞, —á–µ—Å—Ç–Ω–æ–º—É –∫—Ä–∏—Ç–∏–∫–æ–≤–∞–Ω–∏—é.)'''

bot = telebot.TeleBot(t_token_tg_b)



@bot.message_handler(commands=["start"],content_types=['text'])
def suggest_a_post(message: types.Message):
    global user_first_name, last_name
    user_id = message.from_user.id
    user_first_name = str(message.from_user.first_name)
    last_name = str(message.from_user.last_name)
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –Ω–∞–ª–∏—á–∏–µ —Ç–æ–ª—å–∫–æ –±—É–∫–≤ –∏ —Ü–∏—Ñ—Ä

    if last_name == 'None':
        last_name = ''
    if user_first_name == 'None':
        user_first_name = 'No Name'

    if message.chat.type == 'private':
        
        bot.send_message(message.from_user.id, '''
            —Ç–µ—Å—Ç''', parse_mode='html')
        bot.register_next_step_handler(message, process_post)


def process_post(message: types.Message):
    user_id = message.from_user.id
    story_text = message.text

    user_first_name = str(message.from_user.first_name)
    last_name = str(message.from_user.last_name)
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –Ω–∞–ª–∏—á–∏–µ —Ç–æ–ª—å–∫–æ –±—É–∫–≤ –∏ —Ü–∏—Ñ—Ä

    if last_name == 'None':
        last_name = ''
    if user_first_name == 'None':
        user_first_name = 'No Name'

    # bot.send_message(message.from_user.id,message.text.casefold())
    if check_encoding(message.text, 'windows-1251'):
        bot.send_message(message.from_user.id, message.text)
    else:
        bot.send_message(message.from_user.id,"–ö–æ–¥–∏—Ä–æ–≤–∫–∞ –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –æ–∂–∏–¥–∞–µ–º–æ–π (Windows-1251)")
    # bot.send_message(message.from_user.id, message.text.encode('Windows-1251',errors=))

bot.polling(non_stop=True)